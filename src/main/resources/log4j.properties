# 关于log4j日志文件的作用:
# 在编程时经常不可避免地要使用到System.out.println() 语句输出日志信息，而且往往会有一些判断，
# 比如： if(condition) { System.out.println("some information.") ; }
# 这些判断造成正常的程序逻辑中混杂了大量的输出语句。而在开发阶段写下的这些判断仅为了调试的语句，在开发完成时需要查找并移除。
# 部署运行后，尤其是在一些企业应用系统中，还经常需要进一步调试，这时就遇到了更大的麻烦。所以，我们需要一套完备的、灵活的、可配置的日志工具.
# 所以, log4J就是优秀的选择


#全局日志等级配置,输出位置
log4j.rootLogger=INFO, stdout
#stdout控制器
#输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
#文件
#log4j.appender.stdout=org.apache.log4j.FileAppender
#每天产生一个日志文件
#org.apache.log4j.DailyRollingFileAppender

log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d [%-5p] %c %t - %m%n

log4j.logger.com.hele.confucuis=INFO

log4j.logger.com.ibatis=INFO
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=INFO
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=INFO
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=INFO
log4j.logger.java.sql.Connection=INFO
log4j.logger.java.sql.Statement=INFO
log4j.logger.java.sql.PreparedStatement=INFO 